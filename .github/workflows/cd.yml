name: cd

on:
  push:
    branches:
      - lambda-prod
      - lambda-dev

env:
  AWS_REGION: us-east-1

jobs:
  retrieveIDs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/lambda-prod' || github.ref == 'refs/heads/lambda-dev'
    outputs:
      output1: ${{ steps.account.outputs.accountid }}
      output2: ${{ steps.gateway.outputs.gatewayid }}
    steps:
    - name: Clone
      uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Define variables
      run: |
        export AWS_ACCESS_KEY=${{secrets.AWS_ACCESS_KEY_ID}}
        export AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}

    - name: set permission on our script
      run: chmod +x aws/lambda-tf-githubaction/publish-by-jobs.sh
    
    - name: retrieve account ID
      id: account
      if: github.ref=='refs/heads/lambda-prod'
      run: |
        ACCOUNT=$(sh aws/lambda-tf-githubaction/publish-by-jobs.sh prod account)
        echo "::set-output name=accountid::$ACCOUNT"
      shell: sh

    - name: retrieve APIGateway ID
      id: gateway
      if: github.ref=='refs/heads/lambda-prod'
      run: |
        AGID=$(sh aws/lambda-tf-githubaction/publish-by-jobs.sh prod apigateway)
        echo "::set-output name=gatewayid::$AGID"

  deleteAlias:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/lambda-prod' || github.ref == 'refs/heads/lambda-dev'
    needs: retrieveIDs
    steps:
    - name: print accountID and GatewayId from job previous
      run: |
        echo ${{needs.retrieveIDs.outputs.output1}} ${{needs.retrieveIDs.outputs.output2}}


      



    
